import numpy as np
import pylab as p

aa_names = ['Cys', 'Met', 'Phe', 'Ile', 'Leu', 'Val', 'Trp', 'Tyr', 'Ala',
            'Gly', 'Thr', 'Ser', 'Gln', 'Asn', 'Glu', 'Asp', 'His', 'Arg', 'Lys', 'Pro']

sigma = [2.3204, 2.4984, 2.2823, 2.5919, 2.8905, 2.7251, 1.6947, 2.1346, 2.4366, 2.3359, 2.6047, 2.4471, 2.6269, 2.6954, 2.5933, 2.5098, 2.3409, 2.3694, 2.7249, 2.723]
radii = [5.7866, 3.5449, 6.3367, 4.4859, 3.3121, 3.777, 9.2904, 4.8607, 2.1574, 2.5197, 3.0723, 2.2432, 1.1813, 0.7634, 1.2819, 1.4061, 3.357, 1.8119, 0.2712, 3.332]

energies = np.array([
[1.05, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02],
[1.26, 1.45, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.02, 0.02, 0.02, 0.03, 0.02],
[1.19, 1.34, 1.27, 0.01, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01],
[1.3, 1.47, 1.41, 1.58, 0.01, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.01],
[1.25, 1.51, 1.4, 1.59, 1.55, 0.01, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.01],
[1.17, 1.38, 1.31, 1.52, 1.5, 1.4, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.01],
[0.99, 1.17, 1.15, 1.21, 1.18, 1.1, 0.97, 0.02, 0.02, 0.02, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02],
[0.92, 1.15, 1.05, 1.22, 1.18, 1.04, 0.87, 0.81, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.01],
[0.98, 1.2, 0.99, 1.24, 1.26, 1.19, 0.77, 0.81, 1.02, 0.01, 0.01, 0.01, 0.03, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.01],
[0.98, 1.03, 0.84, 1.06, 1.13, 1.01, 0.71, 0.72, 0.82, 0.56, 0.01, 0.01, 0.02, 0.02, 0.01, 0.02, 0.02, 0.02, 0, 0.01],
[0.8, 0.91, 0.76, 0.98, 0.9, 0.87, 0.56, 0.58, 0.64, 0.55, 0.43, 0.01, 0.02, 0.02, 0.02, 0.01, 0.02, 0.02, 0, 0.01],
[0.77, 0.86, 0.68, 0.9, 0.93, 0.83, 0.51, 0.52, 0.59, 0.47, 0.45, 0.28, 0.02, 0.02, 0.01, 0.02, 0.02, 0.02, 0, 0.01],
[0.81, 1.02, 0.72, 0.95, 0.98, 0.85, 0.59, 0.63, 0.75, 0.33, 0.35, 0.26, -0.28, 0.06, 0.03, 0.02, 0.03, 0.04, 0.01, 0.02],
[0.73, 0.95, 0.7, 0.87, 1, 0.89, 0.6, 0.6, 0.77, 0.49, 0.38, 0.38, 0.53, 0.66, 0.01, 0.04, 0.03, 0.05, 0, 0.02],
[0.64, 0.81, 0.53, 0.88, 0.79, 0.72, 0.52, 0.51, 0.47, -0.06, 0.2, 0.04, -0.23, -0.02, -1.58, 0.1, 0.03, 0.04, 0.04, 0.02],
[0.68, 0.64, 0.52, 0.79, 0.68, 0.62, 0.53, 0.57, 0.51, 0.23, 0.29, 0.12, -0.12, 0.27, -0.93, -0.66, 0.03, 0.03, 0.05, 0.02],
[0.91, 1.05, 0.92, 0.94, 0.98, 0.83, 0.82, 0.76, 0.65, 0.56, 0.57, 0.49, 0.38, 0.59, 0.42, 0.62, 0.8, 0.03, 0, 0.02],
[0.58, 0.87, 0.69, 0.96, 0.95, 0.75, 0.66, 0.67, 0.53, 0.38, 0.43, 0.4, 0.36, 0.33, 1.01, 1, 0.49, -0.02, 0.09, 0.02],
[0.59, 0.81, 0.55, 0.96, 0.97, 0.85, 0.5, 0.62, 0.68, -0.01, 0, -0.01, -0.02, 0, 1.3, 1.09, -0.01, -0.48, -11.96, 0.02],
[0.82, 0.95, 0.81, 0.98, 1, 0.92, 0.77, 0.79, 0.74, 0.69, 0.57, 0.58, 0.62, 0.62, 0.42, 0.42, 0.61, 0.53, 0.56, 0.82]
])
energies = energies.T


def EnergyGBV(r_ij, eij, ri, rj, si, sj, e_min=-1.6, e_max=1.6):
    """
    Shifted LJ-Potential
    """
    r0_ij = (ri + rj)
    s0_ij = np.sqrt(si ** 2 + sj ** 2)

    xij = r0_ij/(r_ij - s0_ij + r0_ij)

    xij2 = xij ** 2
    xij6 = xij2 ** 3
    xij12 = xij6 ** 2

    E = 4.0 * eij * (xij12 - xij6)
    if r0_ij - s0_ij <= 0:
        E += 4.0 * eij * (0.5 * s0_ij / r_ij) ** 12.0

    E[E > e_max] = e_max
    E[E < e_min] = e_max
    return E


n_aa = len(aa_names)
r_ij = np.arange(0.0, 20, 0.05)
V_ij_r = np.zeros((n_aa, n_aa, len(r_ij)), dtype=np.float32)

for i in range(n_aa):
    name_i = aa_names[i]
    ri = radii[i]
    si = sigma[i]
    for j in range(n_aa):
        name_j = aa_names[j]
        name = name_i+'_'+name_j

        eij = energies[i, j]
        rj = radii[j]
        sj = sigma[j]
        v = EnergyGBV(r_ij, eij, ri, rj, si, sj)
        v -= v[-1]
        print("name: %s energy" % name, eij)
        V_ij_r[i, j, :] = v
        p.plot(r_ij[30:], v[30:])
p.show()
np.save('unres.npy', V_ij_r)